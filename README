The ARKODE solver employs adaptive-step additive Runge Kutta methods
to enable accurate and efficient time integration of multi-rate
systems of ordinary differential equations of the form   

.. math::

     M y' = f_E(t,y) + f_I(t,y),

where :math:`t` is the independent variable, :math:`y` is the set of
dependent variables (in :math:`\Re^n`), :math:`M` is a user-specified,
non-singular operator from :math:`\Re^n \to \Re^n` (time independent),
and the right-hand side function is partitioned into two components:
:math:`f_E(t,y)` contains the "slow" time scale components to be
integrated explicitly, and :math:`f_I(t,y)` contains the "fast" time
scale components to be integrated implicitly. 

Either of these operators may be disabled, allowing for fully
explicit, fully implicit, or IMEX integration using adaptive RK
methods.

The code is written in C, with C++ and Fortran90 interfaces, and is
built for integration within the SUNDIALS suite of ODE, DAE and
nonlinear system solvers.  It is designed to have a similar user
experience to the CVODE solver, with user modes to allow adaptive
integration to specified output times, return after each internal step
and root-finding capabilities, for calculations both in serial and
parallel (via MPI).  The default integration and solver options will
apply to most users, though complete control over all internal
parameters is enabled through optional interface routines.  
